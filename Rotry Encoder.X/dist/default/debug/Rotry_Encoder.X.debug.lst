

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 22 12:49:14 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F14K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   003F44                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for readRE@RE_states
    58   003F44  00                 	db	0
    59   003F45  FF                 	db	255
    60   003F46  01                 	db	1
    61   003F47  00                 	db	0
    62   003F48  01                 	db	1
    63   003F49  00                 	db	0
    64   003F4A  00                 	db	0
    65   003F4B  FF                 	db	255
    66   003F4C  FF                 	db	255
    67   003F4D  00                 	db	0
    68   003F4E  00                 	db	0
    69   003F4F  01                 	db	1
    70   003F50  00                 	db	0
    71   003F51  01                 	db	1
    72   003F52  FF                 	db	255
    73   003F53  00                 	db	0
    74   000000                     _PORTBbits	set	3969
    75   000000                     _ANSELH	set	3967
    76   000000                     _RA1	set	31745
    77   000000                     _ANSEL	set	3966
    78   000000                     _PORTC	set	3970
    79   000000                     _OSCCON	set	4051
    80   000000                     _INTCON2bits	set	4081
    81   000000                     _LATC	set	3979
    82   000000                     _TRISB	set	3987
    83   000000                     _TRISC	set	3988
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88   003F54                     __pcinit:
    89                           	callstack 0
    90   003F54                     start_initialization:
    91                           	callstack 0
    92   003F54                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (16 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97   003F54  0E44               	movlw	low __pidataCOMRAM
    98   003F56  6EF6               	movwf	tblptrl,c
    99   003F58  0E3F               	movlw	high __pidataCOMRAM
   100   003F5A  6EF7               	movwf	tblptrh,c
   101   003F5C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102   003F5E  6EF8               	movwf	tblptru,c
   103   003F60  EE00  F001         	lfsr	0,__pdataCOMRAM
   104   003F64  EE10 F010          	lfsr	1,16
   105   003F68                     copy_data0:
   106   003F68  0009               	tblrd		*+
   107   003F6A  CFF5 FFEE          	movff	tablat,postinc0
   108   003F6E  50E5               	movf	postdec1,w,c
   109   003F70  50E1               	movf	fsr1l,w,c
   110   003F72  E1FA               	bnz	copy_data0
   111                           
   112                           ; Clear objects allocated to COMRAM (1 bytes)
   113   003F74  6A15               	clrf	__pbssCOMRAM& (0+255),c
   114   003F76                     end_of_initialization:
   115                           	callstack 0
   116   003F76                     __end_of__initialization:
   117                           	callstack 0
   118   003F76  0100               	movlb	0
   119   003F78  EFBE  F01F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122   000015                     __pbssCOMRAM:
   123                           	callstack 0
   124   000015                     readRE@RE_old:
   125                           	callstack 0
   126   000015                     	ds	1
   127                           
   128                           	psect	dataCOMRAM
   129   000001                     __pdataCOMRAM:
   130                           	callstack 0
   131   000001                     readRE@RE_states:
   132                           	callstack 0
   133   000001                     	ds	16
   134                           
   135                           	psect	cstackCOMRAM
   136   000011                     __pcstackCOMRAM:
   137                           	callstack 0
   138   000011                     ??_readRE:
   139   000011                     
   140                           ; 1 bytes @ 0x0
   141   000011                     	ds	2
   142   000013                     readRE@RE_now:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x2
   146   000013                     	ds	1
   147   000014                     main@count:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x3
   151   000014                     	ds	1
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 34 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  count           1    3[COMRAM] unsigned char 
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   172 ;;      Params:         0       0       0       0
   173 ;;      Locals:         1       0       0       0
   174 ;;      Temps:          0       0       0       0
   175 ;;      Totals:         1       0       0       0
   176 ;;Total ram usage:        1 bytes
   177 ;; Hardware stack levels required when called: 1
   178 ;; This function calls:
   179 ;;		_readRE
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text0
   186   003F7C                     __ptext0:
   187                           	callstack 0
   188   003F7C                     _main:
   189                           	callstack 30
   190   003F7C                     
   191                           ;main.c: 35:   RE_old <<= 2;
   192   003F7C  0E00               	movlw	0
   193   003F7E  6E14               	movwf	main@count^0,c
   194                           
   195                           ;main.c: 36:   RE_old |= ( RE_now & 0x03 );
   196   003F80  0E52               	movlw	82
   197   003F82  6ED3               	movwf	211,c	;volatile
   198                           
   199                           ;main.c: 37:   return (RE_states[(RE_old & 0x0F)]);
   200   003F84  0E00               	movlw	0
   201   003F86  6E82               	movwf	130,c	;volatile
   202                           
   203                           ;main.c: 38: }
   204   003F88  0EF0               	movlw	240
   205   003F8A  6E93               	movwf	147,c	;volatile
   206   003F8C  0EF0               	movlw	240
   207   003F8E  6E94               	movwf	148,c	;volatile
   208   003F90  0E00               	movlw	0
   209   003F92  6E7E               	movwf	126,c	;volatile
   210   003F94  0E00               	movlw	0
   211   003F96  6E7F               	movwf	127,c	;volatile
   212   003F98  9EF1               	bcf	241,7,c	;volatile
   213   003F9A                     l732:
   214   003F9A  ECD6  F01F         	call	_readRE	;wreg free
   215   003F9E  2614               	addwf	main@count^0,f,c
   216   003FA0  C014  FF8B         	movff	main@count,3979	;volatile
   217   003FA4  EFCD  F01F         	goto	l732
   218   003FA8  EF00  F000         	goto	start
   219   003FAC                     __end_of_main:
   220                           	callstack 0
   221                           
   222 ;; *************** function _readRE *****************
   223 ;; Defined at:
   224 ;;		line 64 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  RE_now          1    2[COMRAM] unsigned char 
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      unsigned char 
   231 ;; Registers used:
   232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   238 ;;      Params:         0       0       0       0
   239 ;;      Locals:         1       0       0       0
   240 ;;      Temps:          2       0       0       0
   241 ;;      Totals:         3       0       0       0
   242 ;;Total ram usage:        3 bytes
   243 ;; Hardware stack levels used: 1
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		_main
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text1
   252   003FAC                     __ptext1:
   253                           	callstack 0
   254   003FAC                     _readRE:
   255                           	callstack 30
   256   003FAC  BA81               	btfsc	129,5,c	;volatile
   257   003FAE  EFDB  F01F         	goto	u11
   258   003FB2  EFDF  F01F         	goto	u10
   259   003FB6                     u11:
   260   003FB6  6A11               	clrf	??_readRE^0,c
   261   003FB8  2A11               	incf	??_readRE^0,f,c
   262   003FBA  EFE0  F01F         	goto	u18
   263   003FBE                     u10:
   264   003FBE  6A11               	clrf	??_readRE^0,c
   265   003FC0                     u18:
   266   003FC0  B881               	btfsc	129,4,c	;volatile
   267   003FC2  EFE5  F01F         	goto	u21
   268   003FC6  EFE8  F01F         	goto	u20
   269   003FCA                     u21:
   270   003FCA  0E01               	movlw	1
   271   003FCC  EFE9  F01F         	goto	u26
   272   003FD0                     u20:
   273   003FD0  0E00               	movlw	0
   274   003FD2                     u26:
   275   003FD2  0D02               	mullw	2
   276   003FD4  50F3               	movf	243,w,c
   277   003FD6  2411               	addwf	??_readRE^0,w,c
   278   003FD8  6E13               	movwf	readRE@RE_now^0,c
   279   003FDA  90D8               	bcf	status,0,c
   280   003FDC  3615               	rlcf	readRE@RE_old^0,f,c
   281   003FDE  90D8               	bcf	status,0,c
   282   003FE0  3615               	rlcf	readRE@RE_old^0,f,c
   283   003FE2  5013               	movf	readRE@RE_now^0,w,c
   284   003FE4  0B03               	andlw	3
   285   003FE6  1215               	iorwf	readRE@RE_old^0,f,c
   286   003FE8  5015               	movf	readRE@RE_old^0,w,c
   287   003FEA  0B0F               	andlw	15
   288   003FEC  6E11               	movwf	??_readRE^0,c
   289   003FEE  6A12               	clrf	(??_readRE+1)^0,c
   290   003FF0  0E01               	movlw	low readRE@RE_states
   291   003FF2  2411               	addwf	??_readRE^0,w,c
   292   003FF4  6ED9               	movwf	fsr2l,c
   293   003FF6  0E00               	movlw	high readRE@RE_states
   294   003FF8  2012               	addwfc	(??_readRE+1)^0,w,c
   295   003FFA  6EDA               	movwf	fsr2h,c
   296   003FFC  50DF               	movf	indf2,w,c
   297   003FFE  0012               	return		;funcret
   298   004000                     __end_of_readRE:
   299                           	callstack 0
   300   000000                     
   301                           	psect	rparam
   302   000000                     
   303                           	psect	idloc
   304                           
   305                           ;Config register IDLOC0 @ 0x200000
   306                           ;	unspecified, using default values
   307   200000                     	org	2097152
   308   200000  FF                 	db	255
   309                           
   310                           ;Config register IDLOC1 @ 0x200001
   311                           ;	unspecified, using default values
   312   200001                     	org	2097153
   313   200001  FF                 	db	255
   314                           
   315                           ;Config register IDLOC2 @ 0x200002
   316                           ;	unspecified, using default values
   317   200002                     	org	2097154
   318   200002  FF                 	db	255
   319                           
   320                           ;Config register IDLOC3 @ 0x200003
   321                           ;	unspecified, using default values
   322   200003                     	org	2097155
   323   200003  FF                 	db	255
   324                           
   325                           ;Config register IDLOC4 @ 0x200004
   326                           ;	unspecified, using default values
   327   200004                     	org	2097156
   328   200004  FF                 	db	255
   329                           
   330                           ;Config register IDLOC5 @ 0x200005
   331                           ;	unspecified, using default values
   332   200005                     	org	2097157
   333   200005  FF                 	db	255
   334                           
   335                           ;Config register IDLOC6 @ 0x200006
   336                           ;	unspecified, using default values
   337   200006                     	org	2097158
   338   200006  FF                 	db	255
   339                           
   340                           ;Config register IDLOC7 @ 0x200007
   341                           ;	unspecified, using default values
   342   200007                     	org	2097159
   343   200007  FF                 	db	255
   344                           
   345                           	psect	config
   346                           
   347                           ;Config register CONFIG1L @ 0x300000
   348                           ;	CPU System Clock Selection bits
   349                           ;	CPUDIV = NOCLKDIV, No CPU System Clock divide
   350                           ;	USB Clock Selection bit
   351                           ;	USBDIV = OFF, USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
   352   300000                     	org	3145728
   353   300000  00                 	db	0
   354                           
   355                           ;Config register CONFIG1H @ 0x300001
   356                           ;	Oscillator Selection bits
   357                           ;	FOSC = IRC, Internal RC oscillator
   358                           ;	4 X PLL Enable bit
   359                           ;	PLLEN = ON, Oscillator multiplied by 4
   360                           ;	Primary Clock Enable bit
   361                           ;	PCLKEN = 0x1, unprogrammed default
   362                           ;	Fail-Safe Clock Monitor Enable
   363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   364                           ;	Internal/External Oscillator Switchover bit
   365                           ;	IESO = OFF, Oscillator Switchover mode disabled
   366   300001                     	org	3145729
   367   300001  38                 	db	56
   368                           
   369                           ;Config register CONFIG2L @ 0x300002
   370                           ;	Power-up Timer Enable bit
   371                           ;	PWRTEN = OFF, PWRT disabled
   372                           ;	Brown-out Reset Enable bits
   373                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   374                           ;	Brown-out Reset Voltage bits
   375                           ;	BORV = 30, VBOR set to 3.0 V nominal
   376   300002                     	org	3145730
   377   300002  01                 	db	1
   378                           
   379                           ;Config register CONFIG2H @ 0x300003
   380                           ;	Watchdog Timer Enable bit
   381                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   382                           ;	Watchdog Timer Postscale Select bits
   383                           ;	WDTPS = 32768, 1:32768
   384   300003                     	org	3145731
   385   300003  1E                 	db	30
   386                           
   387                           ; Padding undefined space
   388   300004                     	org	3145732
   389   300004  FF                 	db	255
   390                           
   391                           ;Config register CONFIG3H @ 0x300005
   392                           ;	HFINTOSC Fast Start-up bit
   393                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
   394                           ;	MCLR Pin Enable bit
   395                           ;	MCLRE = OFF, RA3 input pin enabled; MCLR disabled
   396   300005                     	org	3145733
   397   300005  00                 	db	0
   398                           
   399                           ;Config register CONFIG4L @ 0x300006
   400                           ;	Stack Full/Underflow Reset Enable bit
   401                           ;	STVREN = ON, Stack full/underflow will cause Reset
   402                           ;	Single-Supply ICSP Enable bit
   403                           ;	LVP = OFF, Single-Supply ICSP disabled
   404                           ;	Boot Block Size Select bit
   405                           ;	BBSIZ = OFF, 1kW boot block size
   406                           ;	Extended Instruction Set Enable bit
   407                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   408                           ;	Background Debugger Enable bit
   409                           ;	DEBUG = 0x1, unprogrammed default
   410   300006                     	org	3145734
   411   300006  81                 	db	129
   412                           
   413                           ; Padding undefined space
   414   300007                     	org	3145735
   415   300007  FF                 	db	255
   416                           
   417                           ;Config register CONFIG5L @ 0x300008
   418                           ;	Code Protection bit
   419                           ;	CP0 = OFF, Block 0 not code-protected
   420                           ;	Code Protection bit
   421                           ;	CP1 = OFF, Block 1 not code-protected
   422   300008                     	org	3145736
   423   300008  03                 	db	3
   424                           
   425                           ;Config register CONFIG5H @ 0x300009
   426                           ;	Boot Block Code Protection bit
   427                           ;	CPB = OFF, Boot block not code-protected
   428                           ;	Data EEPROM Code Protection bit
   429                           ;	CPD = 0x1, unprogrammed default
   430   300009                     	org	3145737
   431   300009  C0                 	db	192
   432                           
   433                           ;Config register CONFIG6L @ 0x30000A
   434                           ;	Table Write Protection bit
   435                           ;	WRT0 = OFF, Block 0 not write-protected
   436                           ;	Table Write Protection bit
   437                           ;	WRT1 = OFF, Block 1 not write-protected
   438   30000A                     	org	3145738
   439   30000A  03                 	db	3
   440                           
   441                           ;Config register CONFIG6H @ 0x30000B
   442                           ;	Configuration Register Write Protection bit
   443                           ;	WRTC = OFF, Configuration registers not write-protected
   444                           ;	Boot Block Write Protection bit
   445                           ;	WRTB = OFF, Boot block not write-protected
   446                           ;	Data EEPROM Write Protection bit
   447                           ;	WRTD = 0x1, unprogrammed default
   448   30000B                     	org	3145739
   449   30000B  E0                 	db	224
   450                           
   451                           ;Config register CONFIG7L @ 0x30000C
   452                           ;	Table Read Protection bit
   453                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
   454                           ;	Table Read Protection bit
   455                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
   456   30000C                     	org	3145740
   457   30000C  03                 	db	3
   458                           
   459                           ;Config register CONFIG7H @ 0x30000D
   460                           ;	Boot Block Table Read Protection bit
   461                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
   462   30000D                     	org	3145741
   463   30000D  40                 	db	64
   464                           tosu	equ	0xFFF
   465                           tosh	equ	0xFFE
   466                           tosl	equ	0xFFD
   467                           stkptr	equ	0xFFC
   468                           pclatu	equ	0xFFB
   469                           pclath	equ	0xFFA
   470                           pcl	equ	0xFF9
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           prodh	equ	0xFF4
   476                           prodl	equ	0xFF3
   477                           indf0	equ	0xFEF
   478                           postinc0	equ	0xFEE
   479                           postdec0	equ	0xFED
   480                           preinc0	equ	0xFEC
   481                           plusw0	equ	0xFEB
   482                           fsr0h	equ	0xFEA
   483                           fsr0l	equ	0xFE9
   484                           wreg	equ	0xFE8
   485                           indf1	equ	0xFE7
   486                           postinc1	equ	0xFE6
   487                           postdec1	equ	0xFE5
   488                           preinc1	equ	0xFE4
   489                           plusw1	equ	0xFE3
   490                           fsr1h	equ	0xFE2
   491                           fsr1l	equ	0xFE1
   492                           bsr	equ	0xFE0
   493                           indf2	equ	0xFDF
   494                           postinc2	equ	0xFDE
   495                           postdec2	equ	0xFDD
   496                           preinc2	equ	0xFDC
   497                           plusw2	equ	0xFDB
   498                           fsr2h	equ	0xFDA
   499                           fsr2l	equ	0xFD9
   500                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_readRE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              3 COMRAM     1     1      0
                             _readRE
 ---------------------------------------------------------------------------------
 (1) _readRE                                               3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readRE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      15       1       22.1%
BITBIGSFRlhh        3E      0       0      12        0.0%
BITBIGSFRlll        2B      0       0      15        0.0%
BITBIGSFRhl         1D      0       0      11        0.0%
BITBIGSFRhh          E      0       0      10        0.0%
BITBIGSFRlhll        8      0       0      14        0.0%
BITBIGSFRlhlh        7      0       0      13        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      16        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 22 12:49:14 2022

                     l42 3FFE                       u10 3FBE                       u11 3FB6  
                     u20 3FD0                       u21 3FCA                       u26 3FD2  
                     u18 3FC0                      l720 3FDA                      l722 3FE2  
                    l730 3F98                      l724 3FE8                      l732 3F9A  
                    l718 3FAC                      l734 3FA0                      l728 3F7C  
                    _RA1 007C01                     _LATC 000F8B                     _main 3F7C  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_main 0011                    _ANSEL 000F7E                    _PORTC 000F82  
                  _TRISB 000F93                    _TRISC 000F94                    tablat 000FF5  
                  status 000FD8          __initialization 3F54             __end_of_main 3FAC  
                 ??_main 0014            __activetblptr 000000                   _ANSELH 000F7F  
                 _OSCCON 000FD3          readRE@RE_states 0001                   _readRE 3FAC  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 3F76            ___rparam_used 000001           __pcstackCOMRAM 0011  
           readRE@RE_old 0015             readRE@RE_now 0013                  ?_readRE 0011  
                __Hparam 0000                  __Lparam 0000                  __pcinit 3F54  
                __ramtop 0300                  __ptext0 3F7C                  __ptext1 3FAC  
   end_of_initialization 3F76                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81            __pidataCOMRAM 3F44           __end_of_readRE 4000  
    start_initialization 3F54                 ??_readRE 0011              __pbssCOMRAM 0015  
              main@count 0014              _INTCON2bits 000FF1                copy_data0 3F68  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
